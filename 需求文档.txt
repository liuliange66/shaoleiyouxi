好的！以下是基于你当前 HTML 扫雷游戏的**极其详细的需求说明文档**，并结合移动原生 APP 的开发思路，帮助你后续用 Cursor 辅助逐步实现原生 APP。  
（内容涵盖功能、交互、动画、UI、无障碍、可扩展性等，适合开发前期的详细需求梳理和蓝图参考）

---

# 扫雷游戏（卡通风格）原生APP需求说明文档

## 1. 总体目标

开发一款**卡通可爱风格的原生扫雷游戏APP**，支持手机和平板，拥有丰富的动画、音效、震动反馈、易用的交互和完善的无障碍支持。  
功能和体验需对标并超越当前 HTML5 版本，UI/UX 适配移动端，后续可扩展更多玩法和个性化内容。

---

## 2. 主要功能模块

### 2.1 游戏主界面

- **顶部状态栏**  
  - 设置按钮（齿轮图标）
  - 帮助按钮（问号图标）
  - 计时器（秒数显示）
  - 当前关卡名（如“初级/中级/高级”）
  - 生命值显示（❤️/💔，最多3颗）
  - 剩余地雷数（带地雷图标）

- **扫雷棋盘**  
  - 动态生成，支持不同难度（9x9/16x16/24x20等）
  - 每个格子有三种状态：未揭开、已揭开、插旗
  - 支持数字、地雷、空白格显示
  - 支持插旗、挖开、双击数字自动展开等操作
  - 支持长按/右键插旗（移动端需优化交互）

- **底部操作区**  
  - 挖开/插旗模式切换按钮
  - 提示按钮（💡，有次数限制）
  - 重新开始按钮（🔄）
  - 缩放按钮（预留，未实现）

- **弹窗与提示**  
  - 设置弹窗（音效、音乐、震动、提示次数、难度选择、放弃挑战等）
  - 帮助弹窗（玩法说明）
  - 状态提示条（如“胜利”、“失败”、“提示已用完”等）
  - “再来一局”按钮

- **调试窗口**（开发/测试用）

---

### 2.2 游戏核心逻辑

- **棋盘生成与重置**  
  - 根据难度动态生成棋盘和地雷分布
  - 首次点击保证安全（不生成地雷）
  - 自动展开空白区域
  - 统计剩余地雷数、已揭开格子数

- **插旗与挖开**  
  - 插旗/取消插旗，更新剩余地雷数
  - 挖开地雷时扣除生命值，生命值为0时游戏失败
  - 挖开数字格时高亮邻居，双击数字可自动展开

- **胜利/失败判定**  
  - 所有非雷格子被揭开即胜利
  - 生命值耗尽或踩雷即失败
  - 游戏结束后自动展示所有地雷和错误标记

- **提示功能**  
  - 有次数限制（1/3/无限）
  - 优先高亮安全区或地雷区
  - 动画高亮中心数字格及邻居

---

### 2.3 动画与特效

- **插旗动画**  
  - 旗帜下落、晃动
  - 彩色粒子、光圈扩散
  - 彩带烟花（从格子中心喷射旋转彩带）

- **爆炸动画**  
  - 爆炸碎片、冲击波
  - 烟雾、表情变化

- **胜利动画**  
  - 横幅弹出
  - 彩带雨/烟花
  - 所有旗帜依次闪烁

- **提示动画**  
  - 数字格闪烁
  - 邻居格高亮
  - 地雷格特殊高亮
提示动画 - 地雷格状态（准确描述）  • 当用户点击“提示”按钮，系统自动高亮一个数字格及其8个邻居格。  • 如果该提示为“地雷区提示”（即该数字格的邻居中有未揭开的地雷），则：  • 未揭开的地雷格会以“砖块半透明闪烁”方式高亮，即：  • 地雷格会添加半透明效果（opacity: 0.5），并在其上方短暂显示一个“💣”表情，伴随闪烁动画。  • 动画持续约2.1秒，结束后自动恢复原状。  • 其它邻居格（非地雷）则以普通高亮边框显示。  • 不会直接揭示地雷格内容，只做视觉提示，帮助玩家推理。  • 中心数字格依然以最明显的高亮动画（发光/闪烁）突出显示。

- **生命值动画**  
  - 失去❤️时动画
  - 顶部“-1❤️”提示

---

### 2.4 音效与震动

- **音效**  
  - 挖开、插旗、爆炸、胜利、点击等
  - 可在设置中开关

- **震动**  
  - 插旗、爆炸、胜利等场景
  - 可在设置中开关

---

### 2.5 设置与个性化

- **音效、音乐、震动开关**
- **提示次数选择**（1/3/无限）
- **难度选择**（初级/中级/高级）
- **放弃挑战按钮**
- **用户ID显示与复制**
- **协议/隐私政策入口**

---

### 2.6 无障碍与适配

- **ARIA标签、语义化控件**
- **适配不同屏幕尺寸与方向**
- **触摸、滑动、长按等移动端交互优化**
- **高对比度、色盲友好模式（可扩展）**

---

## 3. 交互与体验细节

- **所有按钮需有点击反馈**
- **动画需流畅，时长适中，保证用户能感知**
- **插旗/挖开操作需防误触，移动端可考虑长按插旗或模式切换**
- **状态提示自动消失或在操作时隐藏**
- **支持滑轮/拖动选择难度和提示次数**
- **调试窗口仅开发/测试可见**

---

## 4. 技术实现建议（原生APP）

- **推荐技术栈**  
  - iOS：Swift + SwiftUI  
  - Android：Kotlin + Jetpack Compose  
  - 跨平台：Flutter/Dart 或 React Native（如需快速原型）

- **动画实现**  
  - 使用原生动画框架（如iOS的Core Animation/UIViewPropertyAnimator，Android的Animator/Compose Animation，Flutter的AnimationController等）
  - 粒子、彩带、爆炸等可用自定义View/Canvas绘制

- **数据结构**  
  - 棋盘二维数组，格子对象包含：是否地雷、是否揭开、是否插旗、邻雷数、动画状态等

- **状态管理**  
  - 使用响应式/声明式UI框架，便于状态驱动界面刷新

- **无障碍**  
  - 所有交互元素加label/描述，支持读屏
  - 适配系统字体大小、深色模式

- **本地化**  
  - 预留多语言支持

---

## 5. 可扩展性与后续方向

- **更多主题皮肤、表情、音效包**
- **排行榜、成就系统**
- **每日挑战、关卡编辑器**
- **云存档、账号系统**
- **社交分享、好友对战**

---

## 6. 迁移/开发建议

1. **先梳理数据结构与核心逻辑**（可直接参考HTML版的JS实现，逐步迁移为原生语言）
2. **优先实现基础玩法与主界面**
3. **逐步补充动画、音效、震动等体验细节**
4. **最后实现设置、弹窗、无障碍等辅助功能**
5. **每一步都可用Cursor辅助，逐步拆解为小任务，便于调试和测试**

---

## 7. 附：HTML版功能点对照表

| 功能点         | HTML实现参考位置         | 迁移建议           |
|----------------|-------------------------|--------------------|
| 棋盘生成/重置  | `initGame`, `createBoard` | 直接迁移为原生逻辑 |
| 插旗/挖开      | `toggleFlag`, `revealCell` | 事件驱动，状态管理 |
| 动画特效       | CSS动画+JS DOM操作      | 原生动画/自定义View|
| 音效/震动      | `playSound`, `doVibrate` | 系统API            |
| 设置弹窗       | HTML+JS                 | 原生弹窗/对话框    |
| 状态提示       | `showStatusMessage`     | Toast/自定义提示   |
| 难度/提示选择  | 滑轮选择器              | 原生Picker         |
| 无障碍         | ARIA标签                | 系统无障碍API      |

---

如需针对某一功能点详细拆解、原生实现建议或迁移代码示例，请随时告知！  
你可以直接让 Cursor 按照本说明文档，逐步拆解并实现每一个模块。
